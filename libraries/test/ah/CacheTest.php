<?php
namespace ah;

require_once dirname(__FILE__).'/../init.php';

/**
 * Test class for Cache.
 * Generated by PHPUnit on 2011-05-05 at 22:16:38.
 */
class CacheTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var string
     */
    protected $testFilePath;
    protected $testFileContent;
    protected $testCacheNs;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->testFilePath     = DIR_TMP.'/phpunit/unit_test_file';
        $this->testFileContent  = 'UNIT TEST';
        $this->testCacheNs      = 'phpunit';

        if ( !is_writable($this->testFilePath) ) {
            $dirname = dirname($this->testFilePath);
            if ( !file_exists($dirname) ) {
                mkdir($dirname, PERM_WRITABLE);
            }
        }
        file_put_contents($this->testFilePath, $this->testFileContent);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        Cache::clear($this->testFilePath, $this->testCacheNs);
        unlink($this->testFilePath);
        rmdir(dirname($this->testFilePath));
    }

    public function testSave()
    {
        $res = Cache::save($this->testFilePath, file_get_contents($this->testFilePath), $this->testCacheNs);
        $this->assertNotEquals(false, $res);
        $this->assertEquals(strlen(bin2hex($this->testFileContent))/2, $res);
    }

    public function testIsModified()
    {
        Cache::save($this->testFilePath, file_get_contents($this->testFilePath), $this->testCacheNs);

        // キャッシュを作成してから変更されていないので false
        $this->assertFalse(Cache::isModified($this->testFilePath, $this->testCacheNs));

        // 速攻で作るとタイムスタンプが同一になってしまうので，1秒待つ
        sleep(1);
        file_put_contents($this->testFilePath, 'hogehoge');

        // キャッシュを作成してから変更をしたので true
        $this->assertTrue(Cache::isModified($this->testFilePath, $this->testCacheNs));

        // キャッシュが作成されていないので true
        $this->assertTrue(Cache::isModified($this->testFilePath, 'make_yet'));

    }

    public function testLoad()
    {
        Cache::save($this->testFilePath, file_get_contents($this->testFilePath), $this->testCacheNs);

        $load = Cache::load($this->testFilePath, $this->testCacheNs);
        $this->assertSame($this->testFileContent, $load);

        $res  = Cache::load($this->testFilePath, 'not_exists');
        $this->assertFalse($res);
    }

    public function testClean()
    {
        Cache::save($this->testFilePath, file_get_contents($this->testFilePath), $this->testCacheNs);

        $this->assertTrue(Cache::clear($this->testFilePath, $this->testCacheNs));
        $this->assertTrue(Cache::clear($this->testFilePath, 'not_exists'));
    }
}
?>
